WEBPAGE BUILDING SYSTEM
- Wehan making a wepage we firrst take individual elements, in which we store our content. Then, we add them together, making components. From individual components we make layouts, based on common layout patterns. Finally, we assemble multiple layouts, to make a webpage.

MAKING AN ACCORDION COMPONENT
- When making space between <li> you can use flexbox, instead of adding margin-bottom. To do that, simply make <ul> a flex container and then set 'flex-direction' to columns. This will rotate the main axis, so it will be facing downwards, thus making the gap property act like a horizontal space between individual <li>
- You can set default line-height in the body. Usually, it's default value is 1.
- Whe you need a shadow that will envelop the item evenly, simply set first two values of 'box-shadow' property to zero.
- When we making a componenet that has several similar elements all of which have some alike states, for exapmple, an accordion component wich has mulriple similar elements, all of which have closed and opened state, it is good to give each state a class and change each state apperance by using it's class.

MAKING A CAROUSEL COMPONENT
- To increase the size of an imag without other elements sizing accordingly, we use 'transform' property with 'scale' function. Yhis is useful, when we need to make the image grow out of the box.
- Sometimes, when the size of element goes bigger than expected, try reducing or increasing the amount of text.
- To easily place any child item in the center of a parent item, we can apply 'flex' to the parent item. This is helpfuw when centerinh icons inside the buttons.
- When absolutely posritioning elements, it's good to use 'transform: translate' property, to adjust the centering more easily.
- When naming state-classes, it's better to give it both the state and the element name, fo example, when we have a dot element with active and passive states, the adtive stete name, should be 'dot-current' rather than 'current'.
- Padding property has a shorthand, with which we can set all 4 side-paddings in one go. The sides go clockwise from top to right to bottom to left.

MAKING A TABLE COMPONENT
- Tables are not often made anymore, but for making them <table> tag is used, instead of CSS grid.
- Tables have their own tags.

MAKING A PAGINATION COMPONENT
- When getting rid of backround color in buttons, use 'background: none;'.

LAYOUT PATTERNS AND SECTION COMPONENTS
The list of section components:
- Navigation bars are a common component, which stores multiple links to diferent ite pages.
- Hero section is first component that we see when we enter a webpage. It ususally stores the basic site descriptioan along with some images.
- Footer is a component which rests in the bottom of each page on a site. It's became a standart to include a complete sidemap inside the footer.
- Call-to-action is a special component, which goal is to make user buy/subscribe to the site product.
- Feature rows are components which cintain the description of the product feature or testimonial.
The list of layout patterns:
- Row of boxes: a row of individual components with identic shape. Good for product cards etc.
- Grid of boxes: 2-dimensional grid of content boxes.
- All of this layout patterns can be used INSIDE of the bigger layouts.
- Z-pattern: a pattern in which content is placed in a way that is forms a z letter to guide our eyes through. In this pattern each row usually consits of image and text block, which switch sides each row.
- F-pattern: similar to Z-pattern, but images and text blocks form one single column without switching the sides.
- Single column: simple layout in which all elements are placed one after another. Often used on mobile.
- Sidebar: can be used to store options, for example, in web-apps or shops.

MAKING A HERO COMPONENT
- Whe you need to center a omponent inside a parent element, instead of centering the parent element, you can give centering rules DIRECTLY to the component you want to be centered. For example, if you need to center a <nav> inside the <header> you can give container class to nav andcenter the <nav> only.
- To make a section take up the entire height of the viewport, we add 100vh (stands for viewport height) to the 'height' property.