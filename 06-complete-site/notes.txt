7 NECCESARY STEPS OF BUILDING A WEBSITE
- 1. Defining the project. It's important to understand to WHO the website is for. Then, for WHAT is for (defining business and user goals for the website). Last, website's target audience should be defined.
- 2. Planning the project. Gather and plan the site content: images, videos and text. Plan the sitemap (if neccesary): which pages does the site need. Based on content, plan the page layout: which sections and in what order does the site need. Finally, define the site personality, based on target audience and content.
- COntent should always guide the design, not the other way around.
- 3. Sketching the layout and components. Think about components you will need for the page and in which layout you're going to place them. Then, scetch the basic framework of the site, using Figma or even pen and paper. Don't overcomplicate the sketches and don't try to make the layout perfect. You can start writing code as soon as you get the general idea, you dont need to finish the sketch.
- 4. Designing the website. Use content, scetches and decisions from previous steps to build the site with HTML and CSS. When you know what components you will need, make the actual visual styles. Use client's colors, logos, etc.
- 5. Test and optimize the website. Test the website in all modern browsers. Test the website on mobile devices. Optimize the size of the images and videos. Fix the accessibility issues, if present,like color-conrast and alt image titles. 
- 6. Launching the site. When the project is finished, upload the files to the hosting platform and choose a domain name, that represents the brand philosophy.
- 7. Maintaining and updating the site. After launching finished project, you need to install analytics software, like Google analytics, based on which you can cahnge the website layout to boost some parameters.

PLANNING THE PROJECT
- When planning the website, it's good to make a .md file (stands for 'markdown') with all text content of a website.
- The website is for a client, a tech-startup, which product is an AI-driven diet making service, which delifers food to users, based on their preferences. The app is being monetized through subscription.
- Business goal of this website is to sell the omnifood subscription plans to target audience. The user goal is to eat well effortlessly without spending the time and alot of money.
- The site target audinence are people of all genders, which have above average salary and have trouble with sustaining a healthy diet.
- Website made exclusively for marketing purposes are often made of single page. They are usually called 'landings'.
- Website personality: startup/upbeat since the company is tech-first and targeted to people interested in tech. We can also include some elements of calm/peasful personality, since website is about wellbeing of the costumers.

SKETCHING THE PROJECT
- Schematic sketch made in Paint or piece of paper is sufficent.
- When making a sketch follow the content plan and components that you have planned to place the content in.

DESIGNING THE PROJECT
- When writing a CSS file, incude a list of project design rules, like font-sizes, weights, colors, spacing etc. This will make overall deign consistent without much effort.
- To find free images for project or product websites, go to Unsplash.
- To find different faces pictures fo free UI Faces site can be used.

RESPONSIVE DESIGN FUNDAMENTALS
- Responsive design is a technique that makes a webpage automatically adjust it's content and layout to any possible screen size. In practice, this means that site is goung to look fine both on desktop, mobile, etc.
- Responsive design consits of 4 parts, which are implemented in respective order: 1. Fluid layouts. 2. Responsive units. 3. Flexible images. 4. Media queries.
- There are two approaches for building responsive websites: Desktop-first (starting friting CSS for desktop,then media queries shrink the website for smaller devices) and Mobile-first (other way around, makes developers initially reduce the website content down to essentials due to the mobile nature of them).

WORKING OF REM AND MAX-WIDTH PROPERTIES
- To make a fluid layout, it's beter to use 'rem' units to set the heights and widths instead of pixels.
- The using of 'max-width' instead of 'width' allows the element to adapt it's size to the viewport, by getting smaller when the viewport shrinks below the default element width. In this case, the width of the element will change to the parent container width.
- Rem is a sizing unit which refers to the font-size, default font-size is 16px so 1rem = 16px. Rem stands for 'Root element' which in our case is HTML element. By changing the font-size in the html element in CSS document, we can instantly change and adjust the sizing of ALL page elements. That's why using rem is better than using px for sizing the elements.
- Good value to set the rem to is 10px. But rather that setting 'font-size' to 10px in the html element rule, it's better to set it to 62.5%. This will make it possible for users to change the default font-size of a webpage, if thy need to.

MAKING A HERO COMPONENT
- When acting with small sizes, like half a pixel, it's better to use px, because rem wiil not be comfortable in these situations.
- To add border on the INSIDE of a button, we use 'box-shadow' property with 'inset' keyword, instead of 'border'.
- To make the hover more fluid, ve use 'transition' property on the original 'state' of element, for example, when animating links, we use 'transition' on :link and :wisited pseudoclasses.
- A helper class is a class that we can add to different elements, to give them desired properties outside of the element rule. Foe example, instead of giving margin straight to the element we can can give it a helper class in which we add the desired margin. Helper classes can be added to multiple elements.
- It's good to add !important keyword to helper classes to insure the working of their properties.
- To make flex-items overlap each other, we use negative margin, not negative gap.
- When overlapping images, give them a border so that each of them satnds out better.

MAKING HEADER
- To separate recurring page elements from the main page content, we use semantic element <main> in which we engulf the contets of the page.
- When you need tohave an element that is goind to stick on it's place whe you scroll, for example, header, you need to give it a fixed height.
- Rem unit is tricky, because when user wiil change the default font size, it will affect ALL elements which are sized with rem. We might want use rem on places, which we want to be expanded ur shrunk when user needs it, like images and text,bu things like border radius are better sized by px.

MAKING A REUSABLE GRID
- Reusable grid is needed to be made to avoid writing same grid code mutiple times.
- Reusable grid is made by making a helper-class with desired grid properties, which is then added as a subclass to all elements, which need to be displayed as grid.
- We can make multiple grid helper-classes with different number of columns, for example, and then add couple of subclasses to fully costumise the grid elements.
- Another good way to avoid repeating the same code, is to use .container helper class, that will be added to elements, that need centering.

MAKING A HOW IT WORKS SECTION
- When adding a figure element to the page, don't add an empty <div> into HTML file, instead, use a pseudoelement in CSS.
- When making a background figure, instead of setting height in px or rem, do it with width and padding bottom, set to % value.
- To manually change the order of elements to set one at the backroung of other, for example, a figure at the bacjround of an image, we use 'z-index' property, with a negative value on the item that we wnat to end up in the background.

MAKING FEATURED IN SECTION 
- To change the image appeareance directly in CSS we use 'filter' property, where we can select the needed filter.

MAKING SAMPLE MEALS SECTION
- Another great icon resourse Ionic icons.
- When making a product card with image at the top, to make the border of a card round, we use 'overflow: hidden' on the image.
- To give the text in product car ome padding, we need to wrap text-block in a container, and give pading to it directly.
- When making multiple cards with images, it is important that the images have the same dimensions< to avoid cadrs having different size.
- We can add hover animations to everythig, just by adding :hover pseudo class to the neede element selector. To make a smooth animation we then add a transition property to the original element.
- To make a good link underline, instead of 'text-decoration' we simply use 'border-bottom'. To make it disappear, we give it transparent value instead of color value. 

MAKING A TESTIMONIALS AND GALLERY SECTION
- 'figure' HTML element is perfect for self-contained contents with caption, like images
- 'blockquote' element should be used for quotes.